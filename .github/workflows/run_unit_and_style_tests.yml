name: Run unit and style tests

on:
  push:
    branches-ignore: 
      - main
  pull_request:
    branches:
      - main 

jobs:
  run_ruff:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: skyegpt-backend
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.4.4
      - name: Run Ruff
        run: ruff check --output-format=github .

  run_black:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: skyegpt-backend
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Black
        run: |
          python -m pip install --upgrade pip
          pip install black==25.1.0
      - name: Run Black in check mode
        run: black --check --diff .
  
  run_backend_unit_tests:
    runs-on: ubuntu-latest
    needs:
      - run_ruff
      - run_black
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.13' 
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('skyegpt-backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - run: cd skyegpt-backend && pip install --no-cache-dir -r requirements.txt
    - run: pip install pytest
    - run: cd skyegpt-backend && PYTHONPATH=$(pwd) pytest tests
  
  run_frontend_unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' 
          cache: 'npm'
          cache-dependency-path: skyegpt-frontend/package-lock.json 
      - name: Install dependencies and run tests
        run: cd skyegpt-frontend && npm ci && npm run build && npm run test
       
          