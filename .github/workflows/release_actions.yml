name: Release activities

on:
  release:
    types:
      - published

jobs:
  run_backend_unit_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: '3.13' 
    - run: cd skyegpt-backend && pip install --no-cache-dir -r requirements.txt
    - run: pip install pytest
    - run: cd skyegpt-backend && PYTHONPATH=$(pwd) pytest tests

  deploy_backend_to_docker_repo:
    needs: run_backend_unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push multi-platform backend image
        uses: docker/build-push-action@v5
        with:
          context: ./skyegpt-backend
          file: ./skyegpt-backend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            rplesz/skyegpt-backend:latest
            rplesz/skyegpt-backend:${{ github.event.release.tag_name }}
  
  run_frontend_unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' 
          cache: 'npm'
          cache-dependency-path: skyegpt-frontend/package-lock.json 
      - name: Install dependencies and run tests
        run: cd skyegpt-frontend && npm ci && npm run build && npm run test
        

  deploy_frontend_to_docker_repo:
    needs: run_frontend_unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push multi-platform frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./skyegpt-frontend
          file: ./skyegpt-frontend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            rplesz/skyegpt-frontend:latest
            rplesz/skyegpt-frontend:${{ github.event.release.tag_name }}

  push_release_notes_to_slack:
    needs: 
      - deploy_frontend_to_docker_repo
      - deploy_backend_to_docker_repo
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Send release notes to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_SKYEGPTRELEASE }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          RELEASE_NOTES: ${{ github.event.release.body }}
        run: |
          PAYLOAD=$(jq -nc \
            --arg t "*SkyeGPT ${RELEASE_TAG}* released!" \
            --arg n "*Release notes:* $RELEASE_NOTES" \
            '{ text: "\($t)\n\n\($n)" }'
          )
          curl -X POST \
              -H 'Content-type: application/json' \
              --data "$PAYLOAD" \
              $SLACK_WEBHOOK_URL
